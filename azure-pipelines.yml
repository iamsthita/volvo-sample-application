# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- main

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '4351d84f-8a08-457c-b232-730fb99f406d'
  imageRepository: 'volvo-sample-app'
  containerRegistry: 'volvosampleappregistry.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/sampleApp/dockerfile'
  tag: 'v1'  # Using specific tag 'v1' instead of BuildId

  # Agent VM (self-hosted)
  pool:
  name: 'Volvo'

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      name: $(pool.name)
    steps:
      - task: Docker@2
        displayName: Build an image for container registry
        inputs:
          containerRegistry: '$(dockerRegistryServiceConnection)'
          repository: '$(imageRepository)'
          command: 'build'
          Dockerfile: '$(dockerfilePath)'  # Correcting Dockerfile path
          tags: '$(containerRegistry)/$(imageRepository):$(tag)'  # Including container registry and tag

- stage: Push
  displayName: Push stage
  jobs:
  - job: Push
    displayName: Push
    pool:
      name: $(pool.name)
    steps:
      - task: Docker@2
        displayName: Push an image to container registry
        inputs:
          containerRegistry: '$(dockerRegistryServiceConnection)'
          repository: '$(imageRepository)'
          command: 'push'
          Dockerfile: '$(dockerfilePath)'  # Correcting Dockerfile path
          tags: '$(containerRegistry)/$(imageRepository):$(tag)'  # Including container registry and tag

- stage: Deploy
  displayName: Deploy to AKS
  dependsOn: Push  # Modified dependency to ensure image is pushed before deployment
  jobs:
  - job: Deploy
    displayName: Deploy
    pool:
      name: $(pool.name)
    steps:
      - task: KubernetesManifest@0
        displayName: Deploy to AKS
        inputs:
          action: deploy
          kubernetesServiceConnection: 'yourAKSServiceConnection'  # Replace with your AKS service connection
          namespace: 'default'
          manifests: |
            apiVersion: apps/v1
            kind: Deployment
            metadata:
              name: volvoassignment-deployment
            spec:
              replicas: 1
              selector:
                matchLabels:
                  app: volvoassignment
              template:
                metadata:
                  labels:
                    app: volvoassignment
                spec:
                  containers:
                  - name: volvoassignment
                    image: $(containerRegistry)/$(imageRepository):$(tag)  # Using the correct image reference
                    ports:
                    - containerPort: 80
            ---
            apiVersion: v1
            kind: Service
            metadata:
              name: volvoassignment-service
            spec:
              selector:
                app: volvoassignment
              ports:
              - protocol: TCP
                port: 80
                targetPort: 80
